
RampUp_Autosar.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000678  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000030  08000810  08000810  00010810  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000840  08000840  00010848  2**0
                  CONTENTS
  4 .ARM          00000000  08000840  08000840  00010848  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000840  08000848  00010848  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000840  08000840  00010840  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000844  08000844  00010844  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010848  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000848  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000848  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00010848  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001f37  00000000  00000000  00010876  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000063f  00000000  00000000  000127ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000110  00000000  00000000  00012df0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000c0  00000000  00000000  00012f00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002425  00000000  00000000  00012fc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000011e7  00000000  00000000  000153e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009363  00000000  00000000  000165cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001f92f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002ec  00000000  00000000  0001f984  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080007f8 	.word	0x080007f8

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	080007f8 	.word	0x080007f8

080001d8 <Dio_PortHighIOConfCheck>:
static Dio_LevelType Dio_PortLowIOConfCheck(Port_ConfigType PortRegConf, Dio_ChannelType ChannelId);
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
static Dio_LevelType Dio_PortHighIOConfCheck(Port_ConfigType PortRegConf, Dio_ChannelType ChannelId)
{
 80001d8:	b490      	push	{r4, r7}
 80001da:	b086      	sub	sp, #24
 80001dc:	af00      	add	r7, sp, #0
 80001de:	1d3c      	adds	r4, r7, #4
 80001e0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80001e4:	70fb      	strb	r3, [r7, #3]
	Dio_LevelType 	RetVal = STD_LOW;
 80001e6:	2300      	movs	r3, #0
 80001e8:	75fb      	strb	r3, [r7, #23]
	if(((PortRegConf.Port_RegisterConfig -> Port_ModeR >> ((ChannelId + 8) * 2))&0x01) == PORT_PIN_OUTPUT)
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	681a      	ldr	r2, [r3, #0]
 80001ee:	78fb      	ldrb	r3, [r7, #3]
 80001f0:	3308      	adds	r3, #8
 80001f2:	005b      	lsls	r3, r3, #1
 80001f4:	fa22 f303 	lsr.w	r3, r2, r3
 80001f8:	f003 0301 	and.w	r3, r3, #1
 80001fc:	2b01      	cmp	r3, #1
 80001fe:	d10a      	bne.n	8000216 <Dio_PortHighIOConfCheck+0x3e>
	{
		RetVal = (Dio_LevelType)((PortRegConf.Port_RegisterConfig -> Port_ODR >> (ChannelId + 8)) & 0x01);
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	695a      	ldr	r2, [r3, #20]
 8000204:	78fb      	ldrb	r3, [r7, #3]
 8000206:	3308      	adds	r3, #8
 8000208:	fa22 f303 	lsr.w	r3, r2, r3
 800020c:	b2db      	uxtb	r3, r3
 800020e:	f003 0301 	and.w	r3, r3, #1
 8000212:	75fb      	strb	r3, [r7, #23]
 8000214:	e014      	b.n	8000240 <Dio_PortHighIOConfCheck+0x68>
	}
	else if(((PortRegConf.Port_RegisterConfig -> Port_ModeR >> ((ChannelId + 8) * 2))&0x01) == PORT_PIN_INPUT)
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	681a      	ldr	r2, [r3, #0]
 800021a:	78fb      	ldrb	r3, [r7, #3]
 800021c:	3308      	adds	r3, #8
 800021e:	005b      	lsls	r3, r3, #1
 8000220:	fa22 f303 	lsr.w	r3, r2, r3
 8000224:	f003 0301 	and.w	r3, r3, #1
 8000228:	2b00      	cmp	r3, #0
 800022a:	d109      	bne.n	8000240 <Dio_PortHighIOConfCheck+0x68>
	{
		RetVal = (Dio_LevelType)((PortRegConf.Port_RegisterConfig -> Port_IDR >> (ChannelId + 8)) & 0x01);
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	691a      	ldr	r2, [r3, #16]
 8000230:	78fb      	ldrb	r3, [r7, #3]
 8000232:	3308      	adds	r3, #8
 8000234:	fa22 f303 	lsr.w	r3, r2, r3
 8000238:	b2db      	uxtb	r3, r3
 800023a:	f003 0301 	and.w	r3, r3, #1
 800023e:	75fb      	strb	r3, [r7, #23]
	}
	return RetVal;
 8000240:	7dfb      	ldrb	r3, [r7, #23]
}
 8000242:	4618      	mov	r0, r3
 8000244:	3718      	adds	r7, #24
 8000246:	46bd      	mov	sp, r7
 8000248:	bc90      	pop	{r4, r7}
 800024a:	4770      	bx	lr

0800024c <Dio_PortLowIOConfCheck>:

static Dio_LevelType Dio_PortLowIOConfCheck(Port_ConfigType PortRegConf, Dio_ChannelType ChannelId)
{
 800024c:	b490      	push	{r4, r7}
 800024e:	b086      	sub	sp, #24
 8000250:	af00      	add	r7, sp, #0
 8000252:	1d3c      	adds	r4, r7, #4
 8000254:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8000258:	70fb      	strb	r3, [r7, #3]
	Dio_LevelType 	RetVal = STD_LOW;
 800025a:	2300      	movs	r3, #0
 800025c:	75fb      	strb	r3, [r7, #23]
	if(((PortRegConf.Port_RegisterConfig -> Port_ModeR >> (ChannelId / 2))&0x11) == PORT_PIN_OUTPUT)
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	78fa      	ldrb	r2, [r7, #3]
 8000264:	0852      	lsrs	r2, r2, #1
 8000266:	b2d2      	uxtb	r2, r2
 8000268:	40d3      	lsrs	r3, r2
 800026a:	f003 0311 	and.w	r3, r3, #17
 800026e:	2b01      	cmp	r3, #1
 8000270:	d109      	bne.n	8000286 <Dio_PortLowIOConfCheck+0x3a>
	{
		RetVal = (Dio_LevelType)((PortRegConf.Port_RegisterConfig -> Port_ODR >> ChannelId) & 0x01);
 8000272:	687b      	ldr	r3, [r7, #4]
 8000274:	695a      	ldr	r2, [r3, #20]
 8000276:	78fb      	ldrb	r3, [r7, #3]
 8000278:	fa22 f303 	lsr.w	r3, r2, r3
 800027c:	b2db      	uxtb	r3, r3
 800027e:	f003 0301 	and.w	r3, r3, #1
 8000282:	75fb      	strb	r3, [r7, #23]
 8000284:	e012      	b.n	80002ac <Dio_PortLowIOConfCheck+0x60>
	}
	else if(((PortRegConf.Port_RegisterConfig -> Port_ModeR >> (ChannelId / 2))&0x11) == PORT_PIN_INPUT)
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	78fa      	ldrb	r2, [r7, #3]
 800028c:	0852      	lsrs	r2, r2, #1
 800028e:	b2d2      	uxtb	r2, r2
 8000290:	40d3      	lsrs	r3, r2
 8000292:	f003 0311 	and.w	r3, r3, #17
 8000296:	2b00      	cmp	r3, #0
 8000298:	d108      	bne.n	80002ac <Dio_PortLowIOConfCheck+0x60>
	{
		RetVal = (Dio_LevelType)((PortRegConf.Port_RegisterConfig -> Port_IDR >> ChannelId) & 0x01);
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	691a      	ldr	r2, [r3, #16]
 800029e:	78fb      	ldrb	r3, [r7, #3]
 80002a0:	fa22 f303 	lsr.w	r3, r2, r3
 80002a4:	b2db      	uxtb	r3, r3
 80002a6:	f003 0301 	and.w	r3, r3, #1
 80002aa:	75fb      	strb	r3, [r7, #23]
	}
	return RetVal;
 80002ac:	7dfb      	ldrb	r3, [r7, #23]
}
 80002ae:	4618      	mov	r0, r3
 80002b0:	3718      	adds	r7, #24
 80002b2:	46bd      	mov	sp, r7
 80002b4:	bc90      	pop	{r4, r7}
 80002b6:	4770      	bx	lr

080002b8 <Dio_ReadChannel>:
  * @Parameters (inout)		None.
  * @retval 				The physical level of the corresponding Pin.
  */

Dio_LevelType Dio_ReadChannel( Dio_ChannelType ChannelId )
{
 80002b8:	b580      	push	{r7, lr}
 80002ba:	b086      	sub	sp, #24
 80002bc:	af00      	add	r7, sp, #0
 80002be:	4603      	mov	r3, r0
 80002c0:	71fb      	strb	r3, [r7, #7]
	Dio_LevelType 	RetVal = STD_LOW;
 80002c2:	2300      	movs	r3, #0
 80002c4:	75fb      	strb	r3, [r7, #23]
	Port_ConfigType PortRegConf;
	Dio_PortType 	LocPortId;
	Dio_ChannelType LocChannelId;
	LocPortId 	 = 	(ChannelId / MAX_CHANNEL_PER_PORT);
 80002c6:	79fb      	ldrb	r3, [r7, #7]
 80002c8:	08db      	lsrs	r3, r3, #3
 80002ca:	75bb      	strb	r3, [r7, #22]
	LocChannelId = 	(ChannelId % MAX_CHANNEL_PER_PORT);
 80002cc:	79fb      	ldrb	r3, [r7, #7]
 80002ce:	f003 0307 	and.w	r3, r3, #7
 80002d2:	757b      	strb	r3, [r7, #21]
	switch(LocPortId)
 80002d4:	7dbb      	ldrb	r3, [r7, #22]
 80002d6:	2b0b      	cmp	r3, #11
 80002d8:	f200 80a0 	bhi.w	800041c <Dio_ReadChannel+0x164>
 80002dc:	a201      	add	r2, pc, #4	; (adr r2, 80002e4 <Dio_ReadChannel+0x2c>)
 80002de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80002e2:	bf00      	nop
 80002e4:	08000315 	.word	0x08000315
 80002e8:	0800032b 	.word	0x0800032b
 80002ec:	08000341 	.word	0x08000341
 80002f0:	08000357 	.word	0x08000357
 80002f4:	0800036d 	.word	0x0800036d
 80002f8:	08000383 	.word	0x08000383
 80002fc:	08000399 	.word	0x08000399
 8000300:	080003af 	.word	0x080003af
 8000304:	080003c5 	.word	0x080003c5
 8000308:	080003db 	.word	0x080003db
 800030c:	080003f1 	.word	0x080003f1
 8000310:	08000407 	.word	0x08000407
	{
	case PORTA_LOW:
		PortRegConf.Port_RegisterConfig = GPIOA;
 8000314:	4b44      	ldr	r3, [pc, #272]	; (8000428 <Dio_ReadChannel+0x170>)
 8000316:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortLowIOConfCheck(PortRegConf, LocChannelId);
 8000318:	7d7b      	ldrb	r3, [r7, #21]
 800031a:	f107 0208 	add.w	r2, r7, #8
 800031e:	ca07      	ldmia	r2, {r0, r1, r2}
 8000320:	f7ff ff94 	bl	800024c <Dio_PortLowIOConfCheck>
 8000324:	4603      	mov	r3, r0
 8000326:	75fb      	strb	r3, [r7, #23]
		break;
 8000328:	e079      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTA_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOA;
 800032a:	4b3f      	ldr	r3, [pc, #252]	; (8000428 <Dio_ReadChannel+0x170>)
 800032c:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortHighIOConfCheck(PortRegConf, LocChannelId);
 800032e:	7d7b      	ldrb	r3, [r7, #21]
 8000330:	f107 0208 	add.w	r2, r7, #8
 8000334:	ca07      	ldmia	r2, {r0, r1, r2}
 8000336:	f7ff ff4f 	bl	80001d8 <Dio_PortHighIOConfCheck>
 800033a:	4603      	mov	r3, r0
 800033c:	75fb      	strb	r3, [r7, #23]
		break;
 800033e:	e06e      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTB_LOW:
		PortRegConf.Port_RegisterConfig = GPIOB;
 8000340:	4b3a      	ldr	r3, [pc, #232]	; (800042c <Dio_ReadChannel+0x174>)
 8000342:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortLowIOConfCheck(PortRegConf, LocChannelId);
 8000344:	7d7b      	ldrb	r3, [r7, #21]
 8000346:	f107 0208 	add.w	r2, r7, #8
 800034a:	ca07      	ldmia	r2, {r0, r1, r2}
 800034c:	f7ff ff7e 	bl	800024c <Dio_PortLowIOConfCheck>
 8000350:	4603      	mov	r3, r0
 8000352:	75fb      	strb	r3, [r7, #23]
		break;
 8000354:	e063      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTB_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOB;
 8000356:	4b35      	ldr	r3, [pc, #212]	; (800042c <Dio_ReadChannel+0x174>)
 8000358:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortHighIOConfCheck(PortRegConf, LocChannelId);
 800035a:	7d7b      	ldrb	r3, [r7, #21]
 800035c:	f107 0208 	add.w	r2, r7, #8
 8000360:	ca07      	ldmia	r2, {r0, r1, r2}
 8000362:	f7ff ff39 	bl	80001d8 <Dio_PortHighIOConfCheck>
 8000366:	4603      	mov	r3, r0
 8000368:	75fb      	strb	r3, [r7, #23]
		break;
 800036a:	e058      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTC_LOW:
		PortRegConf.Port_RegisterConfig = GPIOC;
 800036c:	4b30      	ldr	r3, [pc, #192]	; (8000430 <Dio_ReadChannel+0x178>)
 800036e:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortLowIOConfCheck(PortRegConf, LocChannelId);
 8000370:	7d7b      	ldrb	r3, [r7, #21]
 8000372:	f107 0208 	add.w	r2, r7, #8
 8000376:	ca07      	ldmia	r2, {r0, r1, r2}
 8000378:	f7ff ff68 	bl	800024c <Dio_PortLowIOConfCheck>
 800037c:	4603      	mov	r3, r0
 800037e:	75fb      	strb	r3, [r7, #23]
		break;
 8000380:	e04d      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTC_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOC;
 8000382:	4b2b      	ldr	r3, [pc, #172]	; (8000430 <Dio_ReadChannel+0x178>)
 8000384:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortHighIOConfCheck(PortRegConf, LocChannelId);
 8000386:	7d7b      	ldrb	r3, [r7, #21]
 8000388:	f107 0208 	add.w	r2, r7, #8
 800038c:	ca07      	ldmia	r2, {r0, r1, r2}
 800038e:	f7ff ff23 	bl	80001d8 <Dio_PortHighIOConfCheck>
 8000392:	4603      	mov	r3, r0
 8000394:	75fb      	strb	r3, [r7, #23]
	break;
 8000396:	e042      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTD_LOW:
		PortRegConf.Port_RegisterConfig = GPIOD;
 8000398:	4b26      	ldr	r3, [pc, #152]	; (8000434 <Dio_ReadChannel+0x17c>)
 800039a:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortLowIOConfCheck(PortRegConf, LocChannelId);
 800039c:	7d7b      	ldrb	r3, [r7, #21]
 800039e:	f107 0208 	add.w	r2, r7, #8
 80003a2:	ca07      	ldmia	r2, {r0, r1, r2}
 80003a4:	f7ff ff52 	bl	800024c <Dio_PortLowIOConfCheck>
 80003a8:	4603      	mov	r3, r0
 80003aa:	75fb      	strb	r3, [r7, #23]
		break;
 80003ac:	e037      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTD_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOD;
 80003ae:	4b21      	ldr	r3, [pc, #132]	; (8000434 <Dio_ReadChannel+0x17c>)
 80003b0:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortHighIOConfCheck(PortRegConf, LocChannelId);
 80003b2:	7d7b      	ldrb	r3, [r7, #21]
 80003b4:	f107 0208 	add.w	r2, r7, #8
 80003b8:	ca07      	ldmia	r2, {r0, r1, r2}
 80003ba:	f7ff ff0d 	bl	80001d8 <Dio_PortHighIOConfCheck>
 80003be:	4603      	mov	r3, r0
 80003c0:	75fb      	strb	r3, [r7, #23]
		break;
 80003c2:	e02c      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTE_LOW:
		PortRegConf.Port_RegisterConfig = GPIOE;
 80003c4:	4b1c      	ldr	r3, [pc, #112]	; (8000438 <Dio_ReadChannel+0x180>)
 80003c6:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortLowIOConfCheck(PortRegConf, LocChannelId);
 80003c8:	7d7b      	ldrb	r3, [r7, #21]
 80003ca:	f107 0208 	add.w	r2, r7, #8
 80003ce:	ca07      	ldmia	r2, {r0, r1, r2}
 80003d0:	f7ff ff3c 	bl	800024c <Dio_PortLowIOConfCheck>
 80003d4:	4603      	mov	r3, r0
 80003d6:	75fb      	strb	r3, [r7, #23]
		break;
 80003d8:	e021      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTE_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOE;
 80003da:	4b17      	ldr	r3, [pc, #92]	; (8000438 <Dio_ReadChannel+0x180>)
 80003dc:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortHighIOConfCheck(PortRegConf, LocChannelId);
 80003de:	7d7b      	ldrb	r3, [r7, #21]
 80003e0:	f107 0208 	add.w	r2, r7, #8
 80003e4:	ca07      	ldmia	r2, {r0, r1, r2}
 80003e6:	f7ff fef7 	bl	80001d8 <Dio_PortHighIOConfCheck>
 80003ea:	4603      	mov	r3, r0
 80003ec:	75fb      	strb	r3, [r7, #23]
		break;
 80003ee:	e016      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTH_LOW:
		PortRegConf.Port_RegisterConfig = GPIOH;
 80003f0:	4b12      	ldr	r3, [pc, #72]	; (800043c <Dio_ReadChannel+0x184>)
 80003f2:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortLowIOConfCheck(PortRegConf, LocChannelId);
 80003f4:	7d7b      	ldrb	r3, [r7, #21]
 80003f6:	f107 0208 	add.w	r2, r7, #8
 80003fa:	ca07      	ldmia	r2, {r0, r1, r2}
 80003fc:	f7ff ff26 	bl	800024c <Dio_PortLowIOConfCheck>
 8000400:	4603      	mov	r3, r0
 8000402:	75fb      	strb	r3, [r7, #23]
		break;
 8000404:	e00b      	b.n	800041e <Dio_ReadChannel+0x166>
	case PORTH_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOH;
 8000406:	4b0d      	ldr	r3, [pc, #52]	; (800043c <Dio_ReadChannel+0x184>)
 8000408:	60bb      	str	r3, [r7, #8]
		RetVal = Dio_PortHighIOConfCheck(PortRegConf, LocChannelId);
 800040a:	7d7b      	ldrb	r3, [r7, #21]
 800040c:	f107 0208 	add.w	r2, r7, #8
 8000410:	ca07      	ldmia	r2, {r0, r1, r2}
 8000412:	f7ff fee1 	bl	80001d8 <Dio_PortHighIOConfCheck>
 8000416:	4603      	mov	r3, r0
 8000418:	75fb      	strb	r3, [r7, #23]
		break;
 800041a:	e000      	b.n	800041e <Dio_ReadChannel+0x166>
	default:
		/*Shouldn't be here*/
		break;
 800041c:	bf00      	nop
	}
	return RetVal;
 800041e:	7dfb      	ldrb	r3, [r7, #23]
}
 8000420:	4618      	mov	r0, r3
 8000422:	3718      	adds	r7, #24
 8000424:	46bd      	mov	sp, r7
 8000426:	bd80      	pop	{r7, pc}
 8000428:	40020000 	.word	0x40020000
 800042c:	40020400 	.word	0x40020400
 8000430:	40020800 	.word	0x40020800
 8000434:	40020c00 	.word	0x40020c00
 8000438:	40021000 	.word	0x40021000
 800043c:	40021c00 	.word	0x40021c00

08000440 <Dio_WriteChannel>:
  * @Parameters (inout)		None.
  * @retval 				None.
  */

void Dio_WriteChannel( Dio_ChannelType ChannelId, Dio_LevelType Level )
{
 8000440:	b480      	push	{r7}
 8000442:	b087      	sub	sp, #28
 8000444:	af00      	add	r7, sp, #0
 8000446:	4603      	mov	r3, r0
 8000448:	460a      	mov	r2, r1
 800044a:	71fb      	strb	r3, [r7, #7]
 800044c:	4613      	mov	r3, r2
 800044e:	71bb      	strb	r3, [r7, #6]
	Port_ConfigType PortRegConf;
	Dio_PortType 	LocPortId;
	Dio_ChannelType LocChannelId;
	LocPortId 	 = 	(ChannelId / MAX_CHANNEL_PER_PORT);
 8000450:	79fb      	ldrb	r3, [r7, #7]
 8000452:	08db      	lsrs	r3, r3, #3
 8000454:	75fb      	strb	r3, [r7, #23]
	LocChannelId = 	(ChannelId % MAX_CHANNEL_PER_PORT);
 8000456:	79fb      	ldrb	r3, [r7, #7]
 8000458:	f003 0307 	and.w	r3, r3, #7
 800045c:	75bb      	strb	r3, [r7, #22]
	switch(LocPortId)
 800045e:	7dfb      	ldrb	r3, [r7, #23]
 8000460:	2b0b      	cmp	r3, #11
 8000462:	f200 80bd 	bhi.w	80005e0 <Dio_WriteChannel+0x1a0>
 8000466:	a201      	add	r2, pc, #4	; (adr r2, 800046c <Dio_WriteChannel+0x2c>)
 8000468:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800046c:	0800049d 	.word	0x0800049d
 8000470:	080004b7 	.word	0x080004b7
 8000474:	080004d3 	.word	0x080004d3
 8000478:	080004ed 	.word	0x080004ed
 800047c:	08000509 	.word	0x08000509
 8000480:	08000523 	.word	0x08000523
 8000484:	0800053f 	.word	0x0800053f
 8000488:	08000559 	.word	0x08000559
 800048c:	08000575 	.word	0x08000575
 8000490:	0800058f 	.word	0x0800058f
 8000494:	080005ab 	.word	0x080005ab
 8000498:	080005c5 	.word	0x080005c5
	{
	case PORTA_LOW:
		PortRegConf.Port_RegisterConfig = GPIOA;
 800049c:	4b53      	ldr	r3, [pc, #332]	; (80005ec <Dio_WriteChannel+0x1ac>)
 800049e:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << LocChannelId);
 80004a0:	68bb      	ldr	r3, [r7, #8]
 80004a2:	695a      	ldr	r2, [r3, #20]
 80004a4:	79b9      	ldrb	r1, [r7, #6]
 80004a6:	7dbb      	ldrb	r3, [r7, #22]
 80004a8:	fa01 f303 	lsl.w	r3, r1, r3
 80004ac:	4619      	mov	r1, r3
 80004ae:	68bb      	ldr	r3, [r7, #8]
 80004b0:	430a      	orrs	r2, r1
 80004b2:	615a      	str	r2, [r3, #20]
		break;
 80004b4:	e095      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTA_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOA;
 80004b6:	4b4d      	ldr	r3, [pc, #308]	; (80005ec <Dio_WriteChannel+0x1ac>)
 80004b8:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << (LocChannelId + 8));
 80004ba:	68bb      	ldr	r3, [r7, #8]
 80004bc:	695a      	ldr	r2, [r3, #20]
 80004be:	79b9      	ldrb	r1, [r7, #6]
 80004c0:	7dbb      	ldrb	r3, [r7, #22]
 80004c2:	3308      	adds	r3, #8
 80004c4:	fa01 f303 	lsl.w	r3, r1, r3
 80004c8:	4619      	mov	r1, r3
 80004ca:	68bb      	ldr	r3, [r7, #8]
 80004cc:	430a      	orrs	r2, r1
 80004ce:	615a      	str	r2, [r3, #20]
		break;
 80004d0:	e087      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTB_LOW:
		PortRegConf.Port_RegisterConfig = GPIOB;
 80004d2:	4b47      	ldr	r3, [pc, #284]	; (80005f0 <Dio_WriteChannel+0x1b0>)
 80004d4:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << LocChannelId);
 80004d6:	68bb      	ldr	r3, [r7, #8]
 80004d8:	695a      	ldr	r2, [r3, #20]
 80004da:	79b9      	ldrb	r1, [r7, #6]
 80004dc:	7dbb      	ldrb	r3, [r7, #22]
 80004de:	fa01 f303 	lsl.w	r3, r1, r3
 80004e2:	4619      	mov	r1, r3
 80004e4:	68bb      	ldr	r3, [r7, #8]
 80004e6:	430a      	orrs	r2, r1
 80004e8:	615a      	str	r2, [r3, #20]
		break;
 80004ea:	e07a      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTB_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOB;
 80004ec:	4b40      	ldr	r3, [pc, #256]	; (80005f0 <Dio_WriteChannel+0x1b0>)
 80004ee:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << (LocChannelId + 8));
 80004f0:	68bb      	ldr	r3, [r7, #8]
 80004f2:	695a      	ldr	r2, [r3, #20]
 80004f4:	79b9      	ldrb	r1, [r7, #6]
 80004f6:	7dbb      	ldrb	r3, [r7, #22]
 80004f8:	3308      	adds	r3, #8
 80004fa:	fa01 f303 	lsl.w	r3, r1, r3
 80004fe:	4619      	mov	r1, r3
 8000500:	68bb      	ldr	r3, [r7, #8]
 8000502:	430a      	orrs	r2, r1
 8000504:	615a      	str	r2, [r3, #20]
		break;
 8000506:	e06c      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTC_LOW:
		PortRegConf.Port_RegisterConfig = GPIOC;
 8000508:	4b3a      	ldr	r3, [pc, #232]	; (80005f4 <Dio_WriteChannel+0x1b4>)
 800050a:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << LocChannelId);
 800050c:	68bb      	ldr	r3, [r7, #8]
 800050e:	695a      	ldr	r2, [r3, #20]
 8000510:	79b9      	ldrb	r1, [r7, #6]
 8000512:	7dbb      	ldrb	r3, [r7, #22]
 8000514:	fa01 f303 	lsl.w	r3, r1, r3
 8000518:	4619      	mov	r1, r3
 800051a:	68bb      	ldr	r3, [r7, #8]
 800051c:	430a      	orrs	r2, r1
 800051e:	615a      	str	r2, [r3, #20]
		break;
 8000520:	e05f      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTC_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOC;
 8000522:	4b34      	ldr	r3, [pc, #208]	; (80005f4 <Dio_WriteChannel+0x1b4>)
 8000524:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << (LocChannelId + 8));
 8000526:	68bb      	ldr	r3, [r7, #8]
 8000528:	695a      	ldr	r2, [r3, #20]
 800052a:	79b9      	ldrb	r1, [r7, #6]
 800052c:	7dbb      	ldrb	r3, [r7, #22]
 800052e:	3308      	adds	r3, #8
 8000530:	fa01 f303 	lsl.w	r3, r1, r3
 8000534:	4619      	mov	r1, r3
 8000536:	68bb      	ldr	r3, [r7, #8]
 8000538:	430a      	orrs	r2, r1
 800053a:	615a      	str	r2, [r3, #20]
		break;
 800053c:	e051      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTD_LOW:
		PortRegConf.Port_RegisterConfig = GPIOD;
 800053e:	4b2e      	ldr	r3, [pc, #184]	; (80005f8 <Dio_WriteChannel+0x1b8>)
 8000540:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << LocChannelId);
 8000542:	68bb      	ldr	r3, [r7, #8]
 8000544:	695a      	ldr	r2, [r3, #20]
 8000546:	79b9      	ldrb	r1, [r7, #6]
 8000548:	7dbb      	ldrb	r3, [r7, #22]
 800054a:	fa01 f303 	lsl.w	r3, r1, r3
 800054e:	4619      	mov	r1, r3
 8000550:	68bb      	ldr	r3, [r7, #8]
 8000552:	430a      	orrs	r2, r1
 8000554:	615a      	str	r2, [r3, #20]
		break;
 8000556:	e044      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTD_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOD;
 8000558:	4b27      	ldr	r3, [pc, #156]	; (80005f8 <Dio_WriteChannel+0x1b8>)
 800055a:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << (LocChannelId + 8));
 800055c:	68bb      	ldr	r3, [r7, #8]
 800055e:	695a      	ldr	r2, [r3, #20]
 8000560:	79b9      	ldrb	r1, [r7, #6]
 8000562:	7dbb      	ldrb	r3, [r7, #22]
 8000564:	3308      	adds	r3, #8
 8000566:	fa01 f303 	lsl.w	r3, r1, r3
 800056a:	4619      	mov	r1, r3
 800056c:	68bb      	ldr	r3, [r7, #8]
 800056e:	430a      	orrs	r2, r1
 8000570:	615a      	str	r2, [r3, #20]
		break;
 8000572:	e036      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTE_LOW:
		PortRegConf.Port_RegisterConfig = GPIOE;
 8000574:	4b21      	ldr	r3, [pc, #132]	; (80005fc <Dio_WriteChannel+0x1bc>)
 8000576:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << LocChannelId);
 8000578:	68bb      	ldr	r3, [r7, #8]
 800057a:	695a      	ldr	r2, [r3, #20]
 800057c:	79b9      	ldrb	r1, [r7, #6]
 800057e:	7dbb      	ldrb	r3, [r7, #22]
 8000580:	fa01 f303 	lsl.w	r3, r1, r3
 8000584:	4619      	mov	r1, r3
 8000586:	68bb      	ldr	r3, [r7, #8]
 8000588:	430a      	orrs	r2, r1
 800058a:	615a      	str	r2, [r3, #20]
		break;
 800058c:	e029      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTE_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOE;
 800058e:	4b1b      	ldr	r3, [pc, #108]	; (80005fc <Dio_WriteChannel+0x1bc>)
 8000590:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << (LocChannelId + 8));
 8000592:	68bb      	ldr	r3, [r7, #8]
 8000594:	695a      	ldr	r2, [r3, #20]
 8000596:	79b9      	ldrb	r1, [r7, #6]
 8000598:	7dbb      	ldrb	r3, [r7, #22]
 800059a:	3308      	adds	r3, #8
 800059c:	fa01 f303 	lsl.w	r3, r1, r3
 80005a0:	4619      	mov	r1, r3
 80005a2:	68bb      	ldr	r3, [r7, #8]
 80005a4:	430a      	orrs	r2, r1
 80005a6:	615a      	str	r2, [r3, #20]
		break;
 80005a8:	e01b      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTH_LOW:
		PortRegConf.Port_RegisterConfig = GPIOH;
 80005aa:	4b15      	ldr	r3, [pc, #84]	; (8000600 <Dio_WriteChannel+0x1c0>)
 80005ac:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << LocChannelId);
 80005ae:	68bb      	ldr	r3, [r7, #8]
 80005b0:	695a      	ldr	r2, [r3, #20]
 80005b2:	79b9      	ldrb	r1, [r7, #6]
 80005b4:	7dbb      	ldrb	r3, [r7, #22]
 80005b6:	fa01 f303 	lsl.w	r3, r1, r3
 80005ba:	4619      	mov	r1, r3
 80005bc:	68bb      	ldr	r3, [r7, #8]
 80005be:	430a      	orrs	r2, r1
 80005c0:	615a      	str	r2, [r3, #20]
		break;
 80005c2:	e00e      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	case PORTH_HIGH:
		PortRegConf.Port_RegisterConfig = GPIOH;
 80005c4:	4b0e      	ldr	r3, [pc, #56]	; (8000600 <Dio_WriteChannel+0x1c0>)
 80005c6:	60bb      	str	r3, [r7, #8]
		OUTPUT_DATA_REGISTER |=  (Level << (LocChannelId + 8));
 80005c8:	68bb      	ldr	r3, [r7, #8]
 80005ca:	695a      	ldr	r2, [r3, #20]
 80005cc:	79b9      	ldrb	r1, [r7, #6]
 80005ce:	7dbb      	ldrb	r3, [r7, #22]
 80005d0:	3308      	adds	r3, #8
 80005d2:	fa01 f303 	lsl.w	r3, r1, r3
 80005d6:	4619      	mov	r1, r3
 80005d8:	68bb      	ldr	r3, [r7, #8]
 80005da:	430a      	orrs	r2, r1
 80005dc:	615a      	str	r2, [r3, #20]
		break;
 80005de:	e000      	b.n	80005e2 <Dio_WriteChannel+0x1a2>
	default:
		/*Shouldn't be here*/
		break;
 80005e0:	bf00      	nop
	}
}
 80005e2:	bf00      	nop
 80005e4:	371c      	adds	r7, #28
 80005e6:	46bd      	mov	sp, r7
 80005e8:	bc80      	pop	{r7}
 80005ea:	4770      	bx	lr
 80005ec:	40020000 	.word	0x40020000
 80005f0:	40020400 	.word	0x40020400
 80005f4:	40020800 	.word	0x40020800
 80005f8:	40020c00 	.word	0x40020c00
 80005fc:	40021000 	.word	0x40021000
 8000600:	40021c00 	.word	0x40021c00

08000604 <Port_PinConfig>:

/* Private user code ---------------------------------------------------------*/

/* USER CODE BEGIN 0 */
static void Port_PinConfig(const Port_ConfigType* ConfigPtr, Port_PinType PinNmber)
{
 8000604:	b480      	push	{r7}
 8000606:	b083      	sub	sp, #12
 8000608:	af00      	add	r7, sp, #0
 800060a:	6078      	str	r0, [r7, #4]
 800060c:	460b      	mov	r3, r1
 800060e:	70fb      	strb	r3, [r7, #3]
	(PORT_REGISTER_CONFIG_STRUCTURE -> Port_ModeR) |= \
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	681a      	ldr	r2, [r3, #0]
			(PORT_PIN_CONFIG_STRUCTURE.Port_PinMode << (PinNmber * 2));
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	795b      	ldrb	r3, [r3, #5]
 800061a:	4619      	mov	r1, r3
 800061c:	78fb      	ldrb	r3, [r7, #3]
 800061e:	005b      	lsls	r3, r3, #1
 8000620:	fa01 f303 	lsl.w	r3, r1, r3
 8000624:	4619      	mov	r1, r3
	(PORT_REGISTER_CONFIG_STRUCTURE -> Port_ModeR) |= \
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	430a      	orrs	r2, r1
 800062c:	601a      	str	r2, [r3, #0]
	(PORT_REGISTER_CONFIG_STRUCTURE -> Port_OutTypeR) |= \
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	685a      	ldr	r2, [r3, #4]
			(PORT_PIN_CONFIG_STRUCTURE.Port_PinOutputType << PinNmber);
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	799b      	ldrb	r3, [r3, #6]
 8000638:	4619      	mov	r1, r3
 800063a:	78fb      	ldrb	r3, [r7, #3]
 800063c:	fa01 f303 	lsl.w	r3, r1, r3
 8000640:	4619      	mov	r1, r3
	(PORT_REGISTER_CONFIG_STRUCTURE -> Port_OutTypeR) |= \
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	430a      	orrs	r2, r1
 8000648:	605a      	str	r2, [r3, #4]
	(PORT_REGISTER_CONFIG_STRUCTURE -> Port_OutSpeedR) |= \
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	689a      	ldr	r2, [r3, #8]
			(PORT_PIN_CONFIG_STRUCTURE.Port_PinOutputSpeed << (PinNmber * 2));
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	7a1b      	ldrb	r3, [r3, #8]
 8000654:	4619      	mov	r1, r3
 8000656:	78fb      	ldrb	r3, [r7, #3]
 8000658:	005b      	lsls	r3, r3, #1
 800065a:	fa01 f303 	lsl.w	r3, r1, r3
 800065e:	4619      	mov	r1, r3
	(PORT_REGISTER_CONFIG_STRUCTURE -> Port_OutSpeedR) |= \
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	681b      	ldr	r3, [r3, #0]
 8000664:	430a      	orrs	r2, r1
 8000666:	609a      	str	r2, [r3, #8]
	(PORT_REGISTER_CONFIG_STRUCTURE -> Port_PuPdR) |= \
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	68da      	ldr	r2, [r3, #12]
			(PORT_PIN_CONFIG_STRUCTURE.Port_PinPuPdType << (PinNmber * 2));
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	79db      	ldrb	r3, [r3, #7]
 8000672:	4619      	mov	r1, r3
 8000674:	78fb      	ldrb	r3, [r7, #3]
 8000676:	005b      	lsls	r3, r3, #1
 8000678:	fa01 f303 	lsl.w	r3, r1, r3
 800067c:	4619      	mov	r1, r3
	(PORT_REGISTER_CONFIG_STRUCTURE -> Port_PuPdR) |= \
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	430a      	orrs	r2, r1
 8000684:	60da      	str	r2, [r3, #12]
}
 8000686:	bf00      	nop
 8000688:	370c      	adds	r7, #12
 800068a:	46bd      	mov	sp, r7
 800068c:	bc80      	pop	{r7}
 800068e:	4770      	bx	lr

08000690 <Port_Init>:
  * @Parameters (out)		None.
  * @Parameters (inout)		None.
  * @retval 				None.
  */
void Port_Init( const Port_ConfigType* ConfigPtr )
{
 8000690:	b580      	push	{r7, lr}
 8000692:	b084      	sub	sp, #16
 8000694:	af00      	add	r7, sp, #0
 8000696:	6078      	str	r0, [r7, #4]
	Port_PinType LocPinNmber;
	uint8 		 LocPortNumber;
	LocPortNumber = (PORT_PIN_CONFIG_STRUCTURE.Port_PinNumber / MAX_PORT_PIN_NUMBER);
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	791b      	ldrb	r3, [r3, #4]
 800069c:	08db      	lsrs	r3, r3, #3
 800069e:	73fb      	strb	r3, [r7, #15]
	LocPinNmber   = (PORT_PIN_CONFIG_STRUCTURE.Port_PinNumber % MAX_PORT_PIN_NUMBER);
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	791b      	ldrb	r3, [r3, #4]
 80006a4:	f003 0307 	and.w	r3, r3, #7
 80006a8:	73bb      	strb	r3, [r7, #14]
	if(ConfigPtr != NULL)
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	2b00      	cmp	r3, #0
 80006ae:	d019      	beq.n	80006e4 <Port_Init+0x54>
	{
		if(! (LocPortNumber % 2))
 80006b0:	7bfb      	ldrb	r3, [r7, #15]
 80006b2:	f003 0301 	and.w	r3, r3, #1
 80006b6:	b2db      	uxtb	r3, r3
 80006b8:	2b00      	cmp	r3, #0
 80006ba:	d105      	bne.n	80006c8 <Port_Init+0x38>
		{
			Port_PinConfig( ConfigPtr, LocPinNmber );
 80006bc:	7bbb      	ldrb	r3, [r7, #14]
 80006be:	4619      	mov	r1, r3
 80006c0:	6878      	ldr	r0, [r7, #4]
 80006c2:	f7ff ff9f 	bl	8000604 <Port_PinConfig>
		{
			LocPinNmber += MAX_PORT_PIN_NUMBER;
			Port_PinConfig( ConfigPtr, LocPinNmber );
		}
	}
}
 80006c6:	e00d      	b.n	80006e4 <Port_Init+0x54>
		else if(LocPortNumber % 2)
 80006c8:	7bfb      	ldrb	r3, [r7, #15]
 80006ca:	f003 0301 	and.w	r3, r3, #1
 80006ce:	b2db      	uxtb	r3, r3
 80006d0:	2b00      	cmp	r3, #0
 80006d2:	d007      	beq.n	80006e4 <Port_Init+0x54>
			LocPinNmber += MAX_PORT_PIN_NUMBER;
 80006d4:	7bbb      	ldrb	r3, [r7, #14]
 80006d6:	3308      	adds	r3, #8
 80006d8:	73bb      	strb	r3, [r7, #14]
			Port_PinConfig( ConfigPtr, LocPinNmber );
 80006da:	7bbb      	ldrb	r3, [r7, #14]
 80006dc:	4619      	mov	r1, r3
 80006de:	6878      	ldr	r0, [r7, #4]
 80006e0:	f7ff ff90 	bl	8000604 <Port_PinConfig>
}
 80006e4:	bf00      	nop
 80006e6:	3710      	adds	r7, #16
 80006e8:	46bd      	mov	sp, r7
 80006ea:	bd80      	pop	{r7, pc}

080006ec <main>:
//	{GPIOD, 		{PORTD_CHANNEL_14, 	PORT_PIN_OUTPUT, 	PORT_PIN_OUTPUT_PUSH_PULL, PORT_PIN_NO_PULLUP_PULLDOWN, PORT_PIN_OUTPUT_LOW_SPEED}},
//	{GPIOD, 		{PORTD_CHANNEL_15, 	PORT_PIN_OUTPUT, 	PORT_PIN_OUTPUT_PUSH_PULL, PORT_PIN_NO_PULLUP_PULLDOWN, PORT_PIN_OUTPUT_LOW_SPEED}}
//};
const Port_ConfigType ConfigPtr[NUMBER_OF_CONFIGURED_PINS];
int main(void)
{
 80006ec:	b580      	push	{r7, lr}
 80006ee:	b082      	sub	sp, #8
 80006f0:	af00      	add	r7, sp, #0
//	uint8 MaxConfig = (sizeof(ConfigPtr)/sizeof(ConfigPtr[0]));
	RCC_PORTD_CLOCK_ENABLE();
 80006f2:	4b18      	ldr	r3, [pc, #96]	; (8000754 <main+0x68>)
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	4a17      	ldr	r2, [pc, #92]	; (8000754 <main+0x68>)
 80006f8:	f043 0308 	orr.w	r3, r3, #8
 80006fc:	6013      	str	r3, [r2, #0]
	for(uint8 index = 0; index < NUMBER_OF_CONFIGURED_PINS; index++)
 80006fe:	2300      	movs	r3, #0
 8000700:	71fb      	strb	r3, [r7, #7]
 8000702:	e00c      	b.n	800071e <main+0x32>
	{
		Port_Init( &ConfigPtr[index] );
 8000704:	79fa      	ldrb	r2, [r7, #7]
 8000706:	4613      	mov	r3, r2
 8000708:	005b      	lsls	r3, r3, #1
 800070a:	4413      	add	r3, r2
 800070c:	009b      	lsls	r3, r3, #2
 800070e:	4a12      	ldr	r2, [pc, #72]	; (8000758 <main+0x6c>)
 8000710:	4413      	add	r3, r2
 8000712:	4618      	mov	r0, r3
 8000714:	f7ff ffbc 	bl	8000690 <Port_Init>
	for(uint8 index = 0; index < NUMBER_OF_CONFIGURED_PINS; index++)
 8000718:	79fb      	ldrb	r3, [r7, #7]
 800071a:	3301      	adds	r3, #1
 800071c:	71fb      	strb	r3, [r7, #7]
 800071e:	79fb      	ldrb	r3, [r7, #7]
 8000720:	2b03      	cmp	r3, #3
 8000722:	d9ef      	bls.n	8000704 <main+0x18>
	}
	Dio_ReadChannel( PORTD_CHANNEL_12 );
 8000724:	203c      	movs	r0, #60	; 0x3c
 8000726:	f7ff fdc7 	bl	80002b8 <Dio_ReadChannel>
	Dio_WriteChannel( PORTD_CHANNEL_12, STD_HIGH );
 800072a:	2101      	movs	r1, #1
 800072c:	203c      	movs	r0, #60	; 0x3c
 800072e:	f7ff fe87 	bl	8000440 <Dio_WriteChannel>
	Dio_ReadChannel( PORTD_CHANNEL_12 );
 8000732:	203c      	movs	r0, #60	; 0x3c
 8000734:	f7ff fdc0 	bl	80002b8 <Dio_ReadChannel>
	Dio_WriteChannel( PORTD_CHANNEL_13, STD_HIGH );
 8000738:	2101      	movs	r1, #1
 800073a:	203d      	movs	r0, #61	; 0x3d
 800073c:	f7ff fe80 	bl	8000440 <Dio_WriteChannel>
	Dio_WriteChannel( PORTD_CHANNEL_14, STD_HIGH );
 8000740:	2101      	movs	r1, #1
 8000742:	203e      	movs	r0, #62	; 0x3e
 8000744:	f7ff fe7c 	bl	8000440 <Dio_WriteChannel>
	Dio_WriteChannel( PORTD_CHANNEL_15, STD_HIGH );
 8000748:	2101      	movs	r1, #1
 800074a:	203f      	movs	r0, #63	; 0x3f
 800074c:	f7ff fe78 	bl	8000440 <Dio_WriteChannel>

	for(;;);
 8000750:	e7fe      	b.n	8000750 <main+0x64>
 8000752:	bf00      	nop
 8000754:	40023830 	.word	0x40023830
 8000758:	08000810 	.word	0x08000810

0800075c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800075c:	480d      	ldr	r0, [pc, #52]	; (8000794 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800075e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000760:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000764:	480c      	ldr	r0, [pc, #48]	; (8000798 <LoopForever+0x6>)
  ldr r1, =_edata
 8000766:	490d      	ldr	r1, [pc, #52]	; (800079c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000768:	4a0d      	ldr	r2, [pc, #52]	; (80007a0 <LoopForever+0xe>)
  movs r3, #0
 800076a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800076c:	e002      	b.n	8000774 <LoopCopyDataInit>

0800076e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800076e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000770:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000772:	3304      	adds	r3, #4

08000774 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000774:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000776:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000778:	d3f9      	bcc.n	800076e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800077a:	4a0a      	ldr	r2, [pc, #40]	; (80007a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800077c:	4c0a      	ldr	r4, [pc, #40]	; (80007a8 <LoopForever+0x16>)
  movs r3, #0
 800077e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000780:	e001      	b.n	8000786 <LoopFillZerobss>

08000782 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000782:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000784:	3204      	adds	r2, #4

08000786 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000786:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000788:	d3fb      	bcc.n	8000782 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800078a:	f000 f811 	bl	80007b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800078e:	f7ff ffad 	bl	80006ec <main>

08000792 <LoopForever>:

LoopForever:
    b LoopForever
 8000792:	e7fe      	b.n	8000792 <LoopForever>
  ldr   r0, =_estack
 8000794:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000798:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800079c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80007a0:	08000848 	.word	0x08000848
  ldr r2, =_sbss
 80007a4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80007a8:	2000001c 	.word	0x2000001c

080007ac <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007ac:	e7fe      	b.n	80007ac <ADC_IRQHandler>
	...

080007b0 <__libc_init_array>:
 80007b0:	b570      	push	{r4, r5, r6, lr}
 80007b2:	4d0d      	ldr	r5, [pc, #52]	; (80007e8 <__libc_init_array+0x38>)
 80007b4:	4c0d      	ldr	r4, [pc, #52]	; (80007ec <__libc_init_array+0x3c>)
 80007b6:	1b64      	subs	r4, r4, r5
 80007b8:	10a4      	asrs	r4, r4, #2
 80007ba:	2600      	movs	r6, #0
 80007bc:	42a6      	cmp	r6, r4
 80007be:	d109      	bne.n	80007d4 <__libc_init_array+0x24>
 80007c0:	4d0b      	ldr	r5, [pc, #44]	; (80007f0 <__libc_init_array+0x40>)
 80007c2:	4c0c      	ldr	r4, [pc, #48]	; (80007f4 <__libc_init_array+0x44>)
 80007c4:	f000 f818 	bl	80007f8 <_init>
 80007c8:	1b64      	subs	r4, r4, r5
 80007ca:	10a4      	asrs	r4, r4, #2
 80007cc:	2600      	movs	r6, #0
 80007ce:	42a6      	cmp	r6, r4
 80007d0:	d105      	bne.n	80007de <__libc_init_array+0x2e>
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007d8:	4798      	blx	r3
 80007da:	3601      	adds	r6, #1
 80007dc:	e7ee      	b.n	80007bc <__libc_init_array+0xc>
 80007de:	f855 3b04 	ldr.w	r3, [r5], #4
 80007e2:	4798      	blx	r3
 80007e4:	3601      	adds	r6, #1
 80007e6:	e7f2      	b.n	80007ce <__libc_init_array+0x1e>
 80007e8:	08000840 	.word	0x08000840
 80007ec:	08000840 	.word	0x08000840
 80007f0:	08000840 	.word	0x08000840
 80007f4:	08000844 	.word	0x08000844

080007f8 <_init>:
 80007f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007fa:	bf00      	nop
 80007fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007fe:	bc08      	pop	{r3}
 8000800:	469e      	mov	lr, r3
 8000802:	4770      	bx	lr

08000804 <_fini>:
 8000804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000806:	bf00      	nop
 8000808:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800080a:	bc08      	pop	{r3}
 800080c:	469e      	mov	lr, r3
 800080e:	4770      	bx	lr
